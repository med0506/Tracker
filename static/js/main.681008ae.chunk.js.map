{"version":3,"sources":["reducer/Reducer.js","contect/Context.js","reducer/LocalStorageReducer.js","component/RemoveList.js","component/List.js","component/lists.js","component/IncomeExpence.js","component/AddForm.js","App.js","serviceWorker.js","index.js"],"names":["Reducer","state","action","type","id","uuid","text","txt","amount","filter","list","defaultValues","ListContext","createContext","ListProvider","props","key","defaultVal","useReducer","value","JSON","parse","window","localStorage","getItem","String","e","dispatch","useEffect","setItem","stringify","useLocalStorageReducer","lists","Provider","children","RemoveList","useContext","onClick","className","List","sign","badge","Math","abs","Lists","length","map","role","IncomeExpence","amounts","incomes","expences","totalIncome","reduce","total","totalExpence","Total","toLocaleString","style","maxWidth","AddForm","useState","settxt","setAmount","handelChange","target","onSubmit","preventDefault","required","onChange","placeholder","step","App","maxHeight","backgroundColor","height","color","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.681008ae.chunk.js","sourcesContent":["import uuid from \"uuid/v4\";\r\n\r\nconst Reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      return [\r\n        ...state,\r\n        { id: uuid(), text: action.txt, amount: action.amount }\r\n      ];\r\n    case \"REMOVE\":\r\n      return state.filter(list => list.id !== action.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default Reducer;\r\n\r\n// const removeList = id => {\r\n//   const filteredList = ;\r\n//   setLists(filteredList);\r\n// };\r\n// const randomId = Math.random() * 100000;\r\n// const addTransaction = ({ txt, amount }) => {\r\n//   let newList = { id: randomId, text: txt, amount: amount };\r\n//   setLists([...lists, newList]);\r\n// };\r\n","import React, { createContext } from \"react\";\r\nimport Reducer from \"../reducer/Reducer\";\r\nimport { useLocalStorageReducer } from \"../reducer/LocalStorageReducer\";\r\n\r\nconst defaultValues = [];\r\n\r\nexport const ListContext = createContext();\r\n\r\nexport const ListProvider = props => {\r\n  const [lists, dispatch] = useLocalStorageReducer(\r\n    \"lists\",\r\n    defaultValues,\r\n    Reducer\r\n  );\r\n\r\n  return (\r\n    <ListContext.Provider value={{ lists, dispatch }}>\r\n      {props.children}\r\n    </ListContext.Provider>\r\n  );\r\n};\r\n","import { useReducer, useEffect } from \"react\";\r\nfunction useLocalStorageReducer(key, defaultVal, Reducer) {\r\n  const [state, dispatch] = useReducer(Reducer, defaultVal, () => {\r\n    let value;\r\n    try {\r\n      value = JSON.parse(\r\n        window.localStorage.getItem(key) || String(defaultVal)\r\n      );\r\n    } catch (e) {\r\n      value = defaultVal;\r\n    }\r\n    return value;\r\n  });\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  return [state, dispatch];\r\n}\r\nexport { useLocalStorageReducer };\r\n","import React, { useContext } from \"react\";\r\nimport { ListContext } from \"../contect/Context\";\r\n\r\nconst RemoveList = ({ id }) => {\r\n  const { dispatch } = useContext(ListContext);\r\n  return (\r\n    <i\r\n      onClick={() => dispatch({ type: \"REMOVE\", id })}\r\n      className=\"fas fa-trash\"\r\n    ></i>\r\n  );\r\n};\r\nexport default RemoveList;\r\n","import React from \"react\";\r\nimport RemoveList from \"./RemoveList\";\r\n\r\nconst List = props => {\r\n  const { list } = props;\r\n  const sign = list.amount > 0 ? \"+$\" : \"-$\";\r\n  const badge = list.amount > 0 ? \"success\" : \"danger\";\r\n\r\n  return (\r\n    <>\r\n      <div className=\"list-group-item d-flex justify-content-center align-items-center mb-1\">\r\n        <li className=\"flex-grow-1 d-flex justify-content-between mr-4 \">\r\n          {list.text}\r\n          <span className={`badge badge-pill badge-${badge} p-2`}>\r\n            {sign}\r\n            {Math.abs(list.amount)}\r\n          </span>\r\n        </li>\r\n        <RemoveList id={list.id} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default List;\r\n","import React, { useContext } from \"react\";\r\nimport { ListContext } from \"../contect/Context\";\r\nimport List from \"./List\";\r\n\r\nconst Lists = () => {\r\n  const { lists } = useContext(ListContext);\r\n  if (lists.length > 0) {\r\n    return (\r\n      <ul className=\"list-group m-3\">\r\n        {lists.map(list => (\r\n          <List list={list} key={list.id} />\r\n        ))}\r\n      </ul>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"list-group\">\r\n        <div className=\"alert alert-warning m-3 text-center\" role=\"alert\">\r\n          {\" \"}\r\n          ADD NEW TRANSACTIONS\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default Lists;\r\n","import React, { useContext } from \"react\";\r\nimport { ListContext } from \"../contect/Context\";\r\n\r\nconst IncomeExpence = () => {\r\n  const { lists } = useContext(ListContext);\r\n\r\n  const amounts = lists.map(lists => lists.amount);\r\n\r\n  const incomes = amounts.filter(amount => (amount > 0 ? amount : null));\r\n  const expences = amounts.filter(amount => (amount < 0 ? amount : null));\r\n  const totalIncome = incomes.reduce((total, amount) => (total += amount), 0);\r\n  const totalExpence = expences.reduce((total, amount) => (total += amount), 0);\r\n  const Total = totalIncome + totalExpence;\r\n  return (\r\n    <>\r\n      <div className=\"card text-white bg-primary mb-3 text-center\">\r\n        <div className=\"card-header\">\r\n          <h2>Balance :</h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\"> $ {Total.toLocaleString()}</h4>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex text-center justify-content-center\">\r\n        <div\r\n          className=\"flex-fill card text-white bg-success mr-1\"\r\n          style={{ maxWidth: \"18rem\" }}\r\n        >\r\n          <div className=\"card-header\">\r\n            <h2>Incomes :</h2>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <h4 className=\"card-title\">$ {totalIncome.toLocaleString()} </h4>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"flex-fill card text-white bg-danger ml-1\"\r\n          style={{ maxWidth: \"18rem\" }}\r\n        >\r\n          <div className=\"card-header\">\r\n            <h2>Expence :</h2>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <h4 className=\"card-title\">{` -$ ${Math.abs(\r\n              totalExpence\r\n            ).toLocaleString()}`}</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default IncomeExpence;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { ListContext } from \"../contect/Context\";\r\n\r\nconst AddForm = () => {\r\n  const { dispatch } = useContext(ListContext);\r\n\r\n  const [txt, settxt] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const handelChange = e => {\r\n    if (e.target.type === \"text\") {\r\n      settxt(e.target.value);\r\n    } else if (e.target.type === \"number\") {\r\n      setAmount(e.target.value);\r\n    }\r\n  };\r\n  const reset = () => {\r\n    setAmount(\"\");\r\n    settxt(\"\");\r\n  };\r\n  const handelSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch({ type: \"ADD\", txt: txt, amount: +amount });\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container d-flex justify-content-center\">\r\n      <form onSubmit={handelSubmit} className=\"form-inline\">\r\n        <div className=\"form-group row justify-content-center\">\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            className=\"form-control col-7 mr-2 \"\r\n            value={txt}\r\n            onChange={handelChange}\r\n            placeholder=\"ADD A TRANSACTION\"\r\n          />\r\n          <input\r\n            required\r\n            type=\"number\"\r\n            step=\"any\"\r\n            className=\"form-control col-2\"\r\n            value={amount}\r\n            onChange={handelChange}\r\n          />\r\n          <button type=\"submit\" className=\"btn btn-primary col-6 mt-3\">\r\n            {\" \"}\r\n            ADD TRANSACTION{\" \"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default AddForm;\r\n","import React from \"react\";\nimport { ListProvider } from \"./contect/Context\";\nimport Lists from \"./component/lists\";\nimport IncomeExpance from \"./component/IncomeExpence\";\nimport AddForm from \"./component/AddForm\";\n\nfunction App() {\n  return (\n    <ListProvider>\n      <div style={{ maxHeight: \"100vh\" }} className=\"container\">\n        <div className=\"row justify-content-center \">\n          <div\n            style={{ backgroundColor: \"rgba(75, 75, 75,0.5)\", height: \"100vh\" }}\n            className=\"col-6 justify-content-center\"\n          >\n            <h1 className=\"text-center mb-4\" style={{ color: \"white\" }}>\n              {\" \"}\n              The Expence Tracker{\" \"}\n            </h1>\n            <IncomeExpance />\n            <Lists />\n            <AddForm />\n          </div>\n        </div>\n      </div>\n    </ListProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}